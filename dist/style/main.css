/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
* {
  margin: 0; }

body {
  margin: 0; }

/* HTML5 display definitions
	 ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
	 ========================================================================== */
a,
p,
span,
button {
  font-family: 'Poppins', sans-serif; }

li {
  list-style: none; }

h1,
h2,
h3 {
  font-family: 'Libre Baskerville', serif; }

/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
  text-decoration: none; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
	 ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
	 ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
	 ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
	 ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
	 ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@-webkit-keyframes pan {
  from {
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1); }
  to {
    -webkit-transform: scale(1.08);
    -moz-transform: scale(1.08);
    -ms-transform: scale(1.08);
    -o-transform: scale(1.08);
    transform: scale(1.08); } }

@keyframes pan {
  from {
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1); }
  to {
    -webkit-transform: scale(1.08);
    -moz-transform: scale(1.08);
    -ms-transform: scale(1.08);
    -o-transform: scale(1.08);
    transform: scale(1.08); } }

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6,
.h {
  font-family: "Libre Baskerville", "Times", "Baskerville", "Georgia", serif;
  font-weight: bold;
  color: #313131; }

h1, .h1 {
  font-size: 40px;
  line-height: 1.4; }

h2, .h2 {
  font-size: 30px; }

h3, .h3 {
  font-size: 26px; }

h4, .h4 {
  font-size: 21px; }

h5, .h5 {
  font-size: 17px; }

h6, .h6 {
  font-size: 15px; }

p {
  font-size: 14px;
  line-height: 28px; }

a {
  font-size: 14px;
  color: #272727; }
  a:hover, a:focus {
    text-decoration: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?kkvjte");
  src: url("../fonts/icomoon.eot?kkvjte#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?kkvjte") format("truetype"), url("../fonts/icomoon.woff?kkvjte") format("woff"), url("../fonts/icomoon.svg?kkvjte#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-coin-dollar:before {
  content: "\e93b"; }

.icon-clock:before {
  content: "\e94e"; }

.icon-circle-left:before {
  content: "\ea44"; }

.mobile_menu_open {
  overflow: hidden;
  position: fixed;
  height: 100vh; }

.header {
  position: relative;
  padding: 20px 0; }
  .header .container {
    display: flex;
    justify-content: space-between;
    align-items: center; }
  .header .menu {
    text-align: right; }
  .header .menu_icon {
    display: block;
    width: 45px;
    height: 35px;
    position: relative;
    cursor: pointer; }
    @media (min-width: 1024px) {
      .header .menu_icon {
        display: none; } }
    .header .menu_icon span {
      display: block;
      position: absolute;
      height: 5px;
      width: 100%;
      background: #000;
      border-radius: 10px;
      opacity: 1;
      left: 0;
      transform: rotate(0deg);
      transition: .25s; }
    .header .menu_icon span:nth-child(1) {
      top: 0; }
    .header .menu_icon span:nth-child(2),
    .header .menu_icon span:nth-child(3) {
      top: 13px; }
    .header .menu_icon span:nth-child(4) {
      top: 26px; }
  .header .nav {
    transform: scaleX(0);
    transition: transform .3s ease;
    position: absolute;
    width: 100%;
    top: 0;
    left: 0;
    margin-top: 70px; }
    .header .nav .menu_links {
      background-color: black;
      z-index: 1000;
      overflow: auto;
      padding: 100px 15px;
      height: 100vh;
      display: flex;
      flex-direction: column; }
      @media (min-width: 1024px) {
        .header .nav .menu_links {
          display: flex;
          flex-wrap: wrap;
          justify-content: center;
          margin: 0 -10px; } }
  .header .menu_links-item {
    display: inline-block;
    font-weight: 500;
    padding: 0 11px;
    text-align: center;
    padding-bottom: 20px; }
    @media (min-width: 1024px) {
      .header .menu_links-item {
        padding-bottom: 0; } }
    .header .menu_links-item a {
      color: #fff;
      font-size: 20px;
      cursor: pointer; }
      @media (min-width: 1024px) {
        .header .menu_links-item a {
          color: #272727;
          font-size: 14px; } }
      .header .menu_links-item a:hover {
        color: #a7a7a7;
        transition: color 0.3s ease-in-out; }
  .header .show .menu_icon span:nth-child(1) {
    top: 18px;
    width: 0%;
    left: 50%; }
  .header .show .menu_icon span:nth-child(2) {
    transform: rotate(45deg); }
  .header .show .menu_icon span:nth-child(3) {
    transform: rotate(130deg); }
  .header .show .menu_icon span:nth-child(4) {
    top: 18px;
    width: 0%;
    left: 50%; }
  .header .show .nav {
    transform: scaleX(1); }

.logo {
  width: 100%;
  max-width: 97px; }
  @media (min-width: 768px) {
    .logo {
      margin-left: 23px; } }

h1 {
  padding: 0 0 30px;
  color: #fff; }
  @media (min-width: 1024px) {
    h1 {
      font-size: 60px;
      padding-bottom: 42px; } }

img {
  width: 100%; }

.wrapper {
  position: relative;
  overflow: hidden; }

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding: 0 20px 0; }

.main_section {
  background: #3f4049 url(https://i.postimg.cc/C172J9m4/bg-01.png) no-repeat center top;
  background-size: cover;
  text-align: center;
  min-height: 775px;
  display: flex;
  justify-content: center;
  align-items: center; }

.banner_title {
  margin: 0 auto;
  max-width: 900px;
  width: 100%;
  padding: 22px 0 10px; }
  .banner_title ul {
    padding: 0; }
  .banner_title .icon {
    display: block;
    margin-bottom: 20px;
    font-size: 35px;
    display: flex;
    align-items: center;
    justify-content: center; }
  @media (min-width: 768px) {
    .banner_title .features {
      display: flex;
      justify-content: space-around; } }
  @media (min-width: 768px) {
    .banner_title .feature {
      margin-right: 20px; }
      .banner_title .feature a {
        font-size: 18px; } }
  .banner_title .first-feature {
    color: #38c695; }
    .banner_title .first-feature a {
      color: #38c695; }
      .banner_title .first-feature a:hover {
        color: #87ddbf;
        transition: color 0.3s ease-in-out; }
  .banner_title .second-feature {
    color: #b27cf5; }
    .banner_title .second-feature a {
      color: #b27cf5; }
      .banner_title .second-feature a:hover {
        color: #eadbfc;
        transition: color 0.3s ease-in-out; }
  .banner_title .third-feature {
    color: #feb960; }
    @media (min-width: 768px) {
      .banner_title .third-feature {
        margin: 0; } }
    .banner_title .third-feature a {
      color: #feb960; }
      .banner_title .third-feature a:hover {
        color: #ffe6c5;
        transition: color 0.3s ease-in-out; }
  .banner_title .feature {
    padding-bottom: 20px; }
    .banner_title .feature a {
      font-weight: 500;
      text-transform: uppercase; }

.btn {
  border: none;
  background: #fc5f45;
  padding: 16px 43px;
  border-radius: 30px;
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
  transition: background-color 1s linear;
  outline: none; }
  .btn:hover {
    background: #fd8a77;
    transition: background 0.3s ease-in-out; }

.title_with_btn {
  padding-bottom: 30px; }
  @media (min-width: 768px) {
    .title_with_btn {
      padding-bottom: 92px; } }

.about_us_section {
  padding: 60px 0; }
  .about_us_section .image_with_text_wrap {
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; }
    @media (min-width: 1024px) {
      .about_us_section .image_with_text_wrap {
        min-height: 880px;
        flex-direction: row;
        justify-content: space-between;
        align-items: center; } }
    .about_us_section .image_with_text_wrap .image_wrap {
      width: 100%;
      max-width: 535px;
      height: 320px;
      border: 10px solid #ccc;
      background-image: linear-gradient(to top, rgba(217, 172, 165, 0.5), rgba(204, 204, 204, 0.3)), url(https://i.postimg.cc/TYRJnpnb/image-01.png);
      background-repeat: no-repeat;
      margin-bottom: 20px; }
      @media (min-width: 768px) {
        .about_us_section .image_with_text_wrap .image_wrap {
          margin-left: 26px;
          min-width: 535px;
          width: 100%;
          min-height: 680px; } }
      @media (min-width: 1024px) {
        .about_us_section .image_with_text_wrap .image_wrap {
          margin-bottom: 0; } }
    .about_us_section .image_with_text_wrap .border_wrap {
      position: relative;
      background: #fff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
      max-width: 630px;
      width: 100%;
      margin: 0; }
      @media (min-width: 768px) {
        .about_us_section .image_with_text_wrap .border_wrap h2 {
          padding-bottom: 45px; } }
      @media (min-width: 1024px) {
        .about_us_section .image_with_text_wrap .border_wrap {
          margin: 0 0 0 -99px; } }
      .about_us_section .image_with_text_wrap .border_wrap:after {
        margin-top: 20px;
        content: '';
        display: block;
        height: 3px;
        background: linear-gradient(to right, #fc5f45 25%, #38c695 25%, #38c695 50%, #b27cf5 50%, #b27cf5 75%, #feb960 75%, #feb960 100%); }
    .about_us_section .image_with_text_wrap .title_with_text {
      padding: 50px 15px; }
      @media (min-width: 768px) {
        .about_us_section .image_with_text_wrap .title_with_text {
          padding: 67px 70px; } }
      .about_us_section .image_with_text_wrap .title_with_text .numeral {
        top: 0; }
      .about_us_section .image_with_text_wrap .title_with_text .text-holder {
        position: relative;
        z-index: 2; }
        .about_us_section .image_with_text_wrap .title_with_text .text-holder p p:first-child {
          padding-bottom: 20px; }

.numeral {
  position: absolute;
  left: 0;
  right: 0;
  font-size: 250px;
  line-height: .8;
  font-weight: 700;
  color: #e0e0e0; }
  @media (min-width: 768px) {
    .numeral {
      font-size: 220px; } }

.our_focus_section {
  background: #f7f7f7;
  text-align: center;
  padding-bottom: 30px; }

h2 {
  padding-bottom: 20px; }
  @media (min-width: 768px) {
    h2 {
      font-size: 50px; } }

.icon_service {
  max-width: 55px; }

.service {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; }
  @media (min-width: 768px) {
    .service {
      flex-wrap: wrap;
      flex-direction: row; }
      .service p {
        font-size: 15px;
        line-height: 1.7; } }

.title {
  position: relative;
  z-index: 2;
  padding: 137px 0 76px; }
  .title p {
    font-size: 18px; }

.service-wrap {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: stretch;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  max-width: 200px;
  min-height: 200px;
  background: #fff;
  padding: 20px 30px;
  margin-bottom: 30px; }
  @media (min-width: 768px) {
    .service-wrap {
      min-height: 307px;
      margin-right: 30px; } }
  @media (min-width: 1200px) {
    .service-wrap {
      margin-bottom: 0; } }

.icon_service {
  padding-top: 6px;
  padding-bottom: 22px;
  margin: 0 auto; }

.title_service {
  font-size: 20px;
  font-weight: 500;
  padding-bottom: 24px; }

.first_service-wrap {
  border-bottom: 3px solid #fc5f45; }

.second_service-wrap {
  border-bottom: 3px solid #38c695; }

.third_service-wrap {
  border-bottom: 3px solid #b27cf5; }

.fourth_service-wrap {
  border-bottom: 3px solid #feb960; }

.portfolio_section {
  background: #f7f7f7;
  text-align: center;
  padding-bottom: 30px; }

.portfolio_list {
  padding: 0; }
  .portfolio_list li {
    display: inline-block; }

.portfolio_item {
  max-width: 360px;
  width: 100%;
  padding-bottom: 20px;
  padding-right: 18px; }

.item-wrapper {
  border: 5px solid rgba(255, 255, 255, 0.1);
  position: relative;
  overflow: hidden; }
  .item-wrapper > img {
    width: 100%; }
  .item-wrapper > a {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    background: transparent; }
  .item-wrapper:hover {
    border: 5px solid #fff;
    transition: border 0.3s ease-in-out;
    transition: all 0.3s ease-in-out; }
    .item-wrapper:hover .hover-icon {
      bottom: 50%; }
    .item-wrapper:hover .portfolio_hover {
      bottom: 0%; }

.portfolio_hover .icon {
  max-width: 61px;
  width: 100%;
  margin: 0 auto; }

.portfolio_hover .project_wrap {
  background: #fff;
  padding: 10px 15px 10px; }

/* .portfolio_list {
    > li {
        flex: 30% 0 0;
        max-width: 30%;
    }
} */
.hover-icon {
  transition: all 0.3s ease-in-out;
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%); }

.portfolio_hover {
  transition: 0.3s all 0.3s ease-in-out;
  color: #000;
  position: absolute;
  bottom: -50%;
  background: #fff;
  width: 100%;
  text-transform: uppercase;
  text-align: center; }
  .portfolio_hover .project_wrap {
    padding: 20px 0; }
  .portfolio_hover .colored {
    height: 3px;
    background: linear-gradient(to right, #fc5f45 25%, #38c695 25%, #38c695 50%, #b27cf5 50%, #b27cf5 75%, #feb960 75%, #feb960 100%); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
